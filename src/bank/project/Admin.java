/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bank.project;
import java.awt.Container;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import javax.swing.*;


/**
 *
 * @author gulshaneng
 */
public class Admin extends javax.swing.JFrame {
    /**
     * Creates new form Customer
     */
    public Admin() {
        initComponents();
        
        this.setDefaultCloseOperation(0);
    }
    
     Detail d=new Detail();
      String accountNumber="";
   public void fetchDataFromDataBase()
    {
        accountNumber=JOptionPane.showInputDialog("Enter Account Number ");
        
         if (accountNumber != null)
         {
                Connection con;
                Statement st;
                ResultSet rs;
       try{
           Class.forName("com.mysql.jdbc.Driver");
           con=DriverManager.getConnection("jdbc:mysql://localhost:3306/bank","root","jaihanuman");
           st=con.createStatement();
           String Query="select a.*,p.*,l.* from account a,local_address l,parmanent_address p where a.account_number=l.account_number and l.account_number=p.account_number and p.account_number=?";
           PreparedStatement ps=con.prepareCall(Query);
           ps.setString(1, accountNumber);
           rs=ps.executeQuery();
               
              
           if(rs.next())
           {
               d.setVisible(true);
               this.setVisible(false);
              
               d.ctype.setText(rs.getString("customer_type"));
               d.name.setText(rs.getString("name"));
               d.dob.setText(rs.getString("dob"));
               d.gender.setText(rs.getString("gender"));
               d.country.setText(rs.getString("country_name"));
               d.fathername.setText(rs.getString("father_name"));
               d.nationality.setText(rs.getString("nationality"));
               d.balance.setText(rs.getString("balance"));
                    byte[] imageByte=rs.getBytes(8);//get image in byte
                    //Resize The ImageIcon
                    ImageIcon image = new ImageIcon(imageByte);
                    Image im = image.getImage();
                    Image myImg = im.getScaledInstance(d.imageLabel.getWidth(), d.imageLabel.getHeight(),Image.SCALE_SMOOTH);
                    ImageIcon newImage = new ImageIcon(myImg);
             
               d.imageLabel.setIcon(newImage);
               
               d.localstreet.setText(rs.getString("l.street"));
               d.localstate.setText(rs.getString("l.state"));
               d.localDistrict.setText(rs.getString("l.district"));
               d.localPin.setText(rs.getString("l.pin"));
               d.localCity.setText(rs.getString("l.city"));
               d.localMobile.setText(rs.getString("l.mobile"));
               d.localCountry.setText(rs.getString("l.country"));
               d.localEmail.setText(rs.getString("l.email"));
               d.paramstreet.setLocation(20, 50);
               d.same.setText(rs.getString("p.same"));
               d.paramstreet2.setText(rs.getString("p.street"));
               d.paramState.setText(rs.getString("p.state"));
               d.paramDistrict.setText(rs.getString("l.district"));
               d.paramPin.setText(rs.getString("p.pin"));
               d.paramCity.setText(rs.getString("p.city"));
               d.paramMobile.setText(rs.getString("p.mobile"));
               d.paramCountry.setText(rs.getString("p.country"));
               d.paramEmail.setText(rs.getString("p.email"));
               
              
                 con.close();
           } else
                   JOptionPane.showMessageDialog(null,"It should not be invalid");
       }catch(Exception e){} 
       
       } 
          else
                   JOptionPane.showMessageDialog(null,"It should not be null");  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        detail = new javax.swing.JMenu();
        createAccount = new javax.swing.JMenuItem();
        update = new javax.swing.JMenuItem();
        search = new javax.swing.JMenuItem();
        delete = new javax.swing.JMenuItem();
        listcustomer = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        deposit = new javax.swing.JMenuItem();
        withdraw = new javax.swing.JMenuItem();
        balancetransfer = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        tranhistory = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administrator");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setForeground(new java.awt.Color(102, 255, 51));
        jPanel2.setFont(new java.awt.Font("Parry Hotter", 1, 36)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Parry Hotter", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 255, 51));
        jLabel1.setText("Welcome To Hamara Bank");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(117, 169, 87, 171);
        jPanel1.add(jPanel2, gridBagConstraints);

        detail.setText("Account");
        detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailActionPerformed(evt);
            }
        });

        createAccount.setText("Create Account");
        createAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountActionPerformed(evt);
            }
        });
        detail.add(createAccount);

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        detail.add(update);

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        detail.add(search);

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        detail.add(delete);

        listcustomer.setText("List Customer");
        listcustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listcustomerActionPerformed(evt);
            }
        });
        detail.add(listcustomer);

        logout.setText("Log Out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        detail.add(logout);

        jMenuBar1.add(detail);

        jMenu2.setText("Transection");

        deposit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        deposit.setText("Deposite");
        deposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositActionPerformed(evt);
            }
        });
        jMenu2.add(deposit);

        withdraw.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        withdraw.setText("With Draw");
        withdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawActionPerformed(evt);
            }
        });
        jMenu2.add(withdraw);

        balancetransfer.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        balancetransfer.setText("Balance Transfer");
        balancetransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balancetransferActionPerformed(evt);
            }
        });
        jMenu2.add(balancetransfer);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Histroy");

        tranhistory.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        tranhistory.setText("Transection History");
        tranhistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tranhistoryActionPerformed(evt);
            }
        });
        jMenu3.add(tranhistory);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailActionPerformed
     
    }//GEN-LAST:event_detailActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       int reply=JOptionPane.showConfirmDialog(this,"Are you sure ??", "Confirmation",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(reply == JOptionPane.YES_OPTION)   
          System.exit(0);
        else
            this.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing
   
    private void depositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositActionPerformed
      Deposit d= new Deposit();
      d.setVisible(true);
      this.setVisible(false);
    }//GEN-LAST:event_depositActionPerformed

    private void tranhistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tranhistoryActionPerformed
            History h=new History();
            h.setVisible(true);
            this.setVisible(false);
 
    }//GEN-LAST:event_tranhistoryActionPerformed

    private void createAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountActionPerformed
        CreateAccount ca= new CreateAccount();
        ca.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_createAccountActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
            fetchDataFromDataBase();   
            this.setVisible(false);
    }//GEN-LAST:event_searchActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        JOptionPane.showConfirmDialog(this,"Thank you for using Hamara Bank", "Log Out...",JOptionPane.OK_OPTION,JOptionPane.QUESTION_MESSAGE);            
        this.dispose(); 
        Login ln=new Login();
        ln.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_logoutActionPerformed

    private void withdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawActionPerformed
        WithDraw wd=new WithDraw();
        wd.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_withdrawActionPerformed

    private void listcustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listcustomerActionPerformed
        ListCustomer lc=new ListCustomer();
        lc.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_listcustomerActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
           fetchDataFromDataBase();   
           this.setVisible(false);
           Container c=d.getContentPane();
           c.setLayout(null);
           JButton delet=new JButton("Delete");
              delet.setBounds(1160,560,100,30);//}catch(Exception e){System.out.println(e);}
             c.add(delet);
             delet.setVisible(true);
               
             delet.addActionListener(new ActionListener()
                {
                    public void actionPerformed(ActionEvent e)
                    {
                          Connection con=null;
                          PreparedStatement ps=null;

                                    try{
                                   Class.forName("com.mysql.jdbc.Driver");
                                   con=DriverManager.getConnection("jdbc:mysql://localhost:3306/bank","root","jaihanuman");
                                   String query="delete from account where account_number=?";
                                   ps=con.prepareStatement(query);
                                   ps.setString(1, accountNumber);
                                   ps.execute();
                                      JOptionPane.showMessageDialog(null,"Delete Sucessfully ");
                                       d.ctype.setText("");
               d.name.setText("");
               d.dob.setText("");
               d.gender.setText("");
               d.country.setText("");
               d.fathername.setText("");
               d.nationality.setText("");
               d.balance.setText("");
               d.imageLabel.setIcon(null);
               
               d.localstreet.setText("");
               d.localstate.setText("");
               d.localDistrict.setText("");
               d.localPin.setText("");
               d.localCity.setText("");
               d.localMobile.setText("");
               d.localCountry.setText("");
               d.localEmail.setText("");
               d.paramstreet.setLocation(20, 50);
               d.same.setText("");
               d.paramstreet2.setText("");
               d.paramState.setText("");
               d.paramDistrict.setText("");
               d.paramPin.setText("");
               d.paramCity.setText("");
               d.paramMobile.setText("");
               d.paramCountry.setText("");
               d.paramEmail.setText("");
                                   }catch(Exception ee){}
                       }
                });
              
               
                   
       // this.setVisible(true);
    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
         this.setVisible(false);
         Admin ad=new Admin();
        Container c=d.getContentPane();
        c.setLayout(null);
        JButton button1=new JButton("Update");
            button1.setBounds(1160,560,100,30);
             c.add(button1);
             button1.setVisible(true);
               
             button1.addActionListener(new ActionListener()
                {
                    public void actionPerformed(ActionEvent e)
                    {
                          Connection con=null;
                          PreparedStatement ps=null;
                         try{
                              Class.forName("com.mysql.jdbc.Driver");
                              con=DriverManager.getConnection("jdbc:mysql://localhost:3306/bank","root","jaihanuman");
                              String query = "update local_address set street = ?, state = ?,district = ?,pin = ?, city = ?,mobile = ?, email= ?, country = ? where account_number = ?";
                              ps=con.prepareStatement(query);
                              ps.setString(1, d.localstreet.getText());
                              ps.setString(2, d.localstate.getText());
                              ps.setString(3, d.localDistrict.getText());
                              ps.setInt(4, Integer.parseInt(d.localPin.getText()));
                              ps.setString(5,d.localCity.getText());
                              ps.setString(6,d.localMobile.getText());
                              ps.setString(8,d.localCountry.getText());
                              ps.setString(7, d.localEmail.getText());
                              ps.setString(9, accountNumber);
                              int a=ps.executeUpdate();
                              if(a==1)
                              JOptionPane.showMessageDialog(null,"Update Sucessfully ");
                              else
                                   JOptionPane.showMessageDialog(null,"Update Problem.. ");
                                  con.close();
                                 d.dispose();
                                ad.setVisible(true);
                             }catch(Exception ee){
                              JOptionPane.showMessageDialog(null, ee);
                          }
                      }
                    });
     
               d.localstreet.setEditable(true);
               d.localstate.setEditable(true);
               d.localDistrict.setEditable(true);
               d.localPin.setEditable(true);
               d.localCity.setEditable(true);
               d.localMobile.setEditable(true);
               d.localCountry.setEditable(true);
               d.localEmail.setEditable(true);
        d.setTitle("Update Detail");
        fetchDataFromDataBase(); 
        this.setVisible(false); 
         
    }//GEN-LAST:event_updateActionPerformed

    private void balancetransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balancetransferActionPerformed
        BalanceTransfer bt=new BalanceTransfer();
        bt.setVisible(true);
        this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_balancetransferActionPerformed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Admin().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem balancetransfer;
    private javax.swing.JMenuItem createAccount;
    private javax.swing.JMenuItem delete;
    private javax.swing.JMenuItem deposit;
    private javax.swing.JMenu detail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JMenuItem listcustomer;
    private javax.swing.JMenuItem logout;
    private javax.swing.JMenuItem search;
    private javax.swing.JMenuItem tranhistory;
    private javax.swing.JMenuItem update;
    private javax.swing.JMenuItem withdraw;
    // End of variables declaration//GEN-END:variables
}
